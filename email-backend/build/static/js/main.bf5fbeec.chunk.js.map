{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","buyerName","setBuyerName","useState","buyerAddress","setBuyerAddress","buyerCivilStatus","setBuyerCivilStatus","sellerName","setSellerName","sellerAddress","setSellerAddress","salePrice","setSalePrice","dateOfSale","setDateOfSale","makeSeries","setMakeSeries","model","setModel","motorNo","setMotorNo","crNo","setCrNo","type","setType","plateNo","setPlateNo","chassisNo","setChassisNo","fileNo","setFileNo","witness1Name","setWitness1Name","witness2Name","setWitness2Name","buyerEmail","recipientEmail","generatePDF","data","jsPDF","require","doc","text","concat","save","handleActionChange","sessionStorage","getItem","alert","prompt","fetch","method","headers","Content-Type","body","JSON","stringify","senderEmail","formData","then","response","json","catch","error","message","sendEmail","window","location","href","React","createElement","className","onSubmit","e","preventDefault","value","onChange","target","step","min","placeholder","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAiReA,MA9Qf,WAEE,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAcC,GAAmBF,mBAAS,KAC1CG,EAAkBC,GAAuBJ,mBAAS,KAElDK,EAAYC,GAAiBN,mBAAS,KACtCO,EAAeC,GAAoBR,mBAAS,KAC5CS,EAAWC,GAAgBV,mBAAS,KACpCW,EAAYC,GAAiBZ,mBAAS,KAEtCa,EAAYC,GAAiBd,mBAAS,KACtCe,EAAOC,GAAYhB,mBAAS,KAC5BiB,EAASC,GAAclB,mBAAS,KAChCmB,EAAMC,GAAWpB,mBAAS,KAC1BqB,EAAMC,GAAWtB,mBAAS,KAC1BuB,EAASC,GAAcxB,mBAAS,KAChCyB,EAAWC,GAAgB1B,mBAAS,KACpC2B,EAAQC,GAAa5B,mBAAS,KAE9B6B,EAAcC,GAAmB9B,mBAAS,KAC1C+B,EAAcC,GAAmBhC,mBAAS,KAE1CiC,GAAcjC,mBAAS,KACvBkC,GAAkBlC,mBAAS,IA0C5BmC,EAAeC,IAEnB,MAAMC,MAAEA,GAAUC,EAAQ,IAEpBC,EAAM,IAAIF,EAEhBE,EAAIC,KAAK,eAAgB,GAAI,IAC7BD,EAAIC,KAAI,eAAAC,OAAgBL,EAAKtC,WAAa,GAAI,IAC9CyC,EAAIC,KAAI,kBAAAC,OAAmBL,EAAKnC,cAAgB,GAAI,IACpDsC,EAAIC,KAAI,uBAAAC,OAAwBL,EAAKjC,kBAAoB,GAAI,IAE7DoC,EAAIC,KAAI,gBAAAC,OAAiBL,EAAK/B,YAAc,GAAI,IAChDkC,EAAIC,KAAI,mBAAAC,OAAoBL,EAAK7B,eAAiB,GAAI,IACtDgC,EAAIC,KAAI,eAAAC,OAAgBL,EAAK3B,WAAa,GAAI,IAC9C8B,EAAIC,KAAI,iBAAAC,OAAkBL,EAAKzB,YAAc,GAAI,IAEjD4B,EAAIC,KAAK,sBAAuB,GAAI,IACpCD,EAAIC,KAAI,gBAAAC,OAAiBL,EAAKvB,YAAc,GAAI,KAChD0B,EAAIC,KAAI,UAAAC,OAAWL,EAAKrB,OAAS,GAAI,KACrCwB,EAAIC,KAAI,aAAAC,OAAcL,EAAKnB,SAAW,GAAI,KAC1CsB,EAAIC,KAAI,YAAAC,OAAaL,EAAKjB,MAAQ,GAAI,KACtCoB,EAAIC,KAAI,SAAAC,OAAUL,EAAKf,MAAQ,GAAI,KACnCkB,EAAIC,KAAI,cAAAC,OAAeL,EAAKb,SAAW,GAAI,KAC3CgB,EAAIC,KAAI,eAAAC,OAAgBL,EAAKX,WAAa,GAAI,KAC9Cc,EAAIC,KAAI,YAAAC,OAAaL,EAAKT,QAAU,GAAI,KAExCY,EAAIC,KAAI,cAAAC,OAAeL,EAAKP,cAAgB,GAAI,KAChDU,EAAIC,KAAI,cAAAC,OAAeL,EAAKL,cAAgB,GAAI,KAOhDQ,EAAIG,KAAK,qBAqCPC,EAAqBA,KAEZC,eAAeC,QAAQ,QAnCjBT,KACjB,IAAKH,EAED,YADAa,MAAM,mDAKV,MAAMZ,EAAiBa,OAAO,uCAEzBb,EAKLc,MAAM,mCAAoC,CACtCC,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,YAAatB,EACbC,eAAgBA,EAChBsB,SAAUpB,MAGjBqB,KAAMC,GAAaA,EAASC,QAC5BF,KAAK,KACFX,MAAM,8BAETc,MAAOC,IACJf,MAAM,wBAA0Be,EAAMC,WAlBtChB,MAAM,iCAgCRiB,CAAU,CACNjE,YACAG,eACAE,mBACAE,aACAE,gBACAE,YACAE,aACAE,aACAE,QACAE,UACAE,OACAE,OACAE,UACAE,YACAE,SACAE,eACAE,eACAE,aACAC,mBAtIN8B,OAAOC,SAASC,KAAO,qCA8IzB,OACEC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,QAAME,SA7IYC,IAEpBA,EAAEC,iBAwBFrC,EAtBa,CACXrC,YACAG,eACAE,mBACAE,aACAE,gBACAE,YACAE,aACAE,aACAE,QACAE,UACAE,OACAE,OACAE,UACAE,YACAE,SACAE,eACAE,mBA0HEoC,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,aAAO,cACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAO3E,EAAW4E,SAAWH,GAAMxE,EAAawE,EAAEI,OAAOF,UACtEN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,iBACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOxE,EAAcyE,SAAWH,GAAMrE,EAAgBqE,EAAEI,OAAOF,UAC5EN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,sBACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOtE,EAAkBuE,SAAWH,GAAMnE,EAAoBmE,EAAEI,OAAOF,UACpFN,IAAAC,cAAA,WAGRD,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,aAAO,eACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOpE,EAAYqE,SAAWH,GAAMjE,EAAciE,EAAEI,OAAOF,UACxEN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,kBACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOlE,EAAemE,SAAWH,GAAM/D,EAAiB+D,EAAEI,OAAOF,UAC9EN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,uBACbD,IAAAC,cAAA,SACE/C,KAAK,SACLoD,MAAOhE,EACPiE,SAAWH,GAAM7D,EAAa6D,EAAEI,OAAOF,OACvCG,KAAK,OACLC,IAAI,IACJC,YAAY,4BAERX,IAAAC,cAAA,WAEAD,IAAAC,cAAA,aAAO,gBACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAO9D,EAAY+D,SAAWH,GAAM3D,EAAc2D,EAAEI,OAAOF,UACxEN,IAAAC,cAAA,WAGRD,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,aAAO,eACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAO5D,EAAY6D,SAAWH,GAAMzD,EAAcyD,EAAEI,OAAOF,UACxEN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,SACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAO1D,EAAO2D,SAAWH,GAAMvD,EAASuD,EAAEI,OAAOF,UAC9DN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,YACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOxD,EAASyD,SAAWH,GAAMrD,EAAWqD,EAAEI,OAAOF,UAClEN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,WACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOtD,EAAMuD,SAAWH,GAAMnD,EAAQmD,EAAEI,OAAOF,UAC5DN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,QACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOpD,EAAMqD,SAAWH,GAAMjD,EAAQiD,EAAEI,OAAOF,UAC5DN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,aACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOlD,EAASmD,SAAWH,GAAM/C,EAAW+C,EAAEI,OAAOF,UAClEN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,cACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAOhD,EAAWiD,SAAWH,GAAM7C,EAAa6C,EAAEI,OAAOF,UACtEN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,WACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAO9C,EAAQ+C,SAAWH,GAAM3C,EAAU2C,EAAEI,OAAOF,UAChEN,IAAAC,cAAA,WAGRD,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,aAAO,gBACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAO5C,EAAc6C,SAAWH,GAAMzC,EAAgByC,EAAEI,OAAOF,UAC5EN,IAAAC,cAAA,WACRD,IAAAC,cAAA,aAAO,gBACLD,IAAAC,cAAA,SAAO/C,KAAK,OAAOoD,MAAO1C,EAAc2C,SAAWH,GAAMvC,EAAgBuC,EAAEI,OAAOF,UAC5EN,IAAAC,cAAA,WAWhBD,IAAAC,cAAA,WAEQD,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQ/C,KAAK,UAAS,6BACtB8C,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQ/C,KAAK,SAAS0D,QAASA,IAAMpC,KAA4B,sBC7P1DqC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAZ,EAAA,GAAAd,KAAA0B,EAAAC,KAAA,WAAqB3B,KAAK4B,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5B,IAAAC,cAACD,IAAM6B,WAAU,KACf7B,IAAAC,cAACvE,EAAG,QAORmF","file":"static/js/main.bf5fbeec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // [Variable, function to update the state] = initial state\n  const [buyerName, setBuyerName] = useState('');\n  const [buyerAddress, setBuyerAddress] = useState('');\n  const [buyerCivilStatus, setBuyerCivilStatus] = useState('');\n\n  const [sellerName, setSellerName] = useState('');\n  const [sellerAddress, setSellerAddress] = useState('');\n  const [salePrice, setSalePrice] = useState('');\n  const [dateOfSale, setDateOfSale] = useState('');\n\n  const [makeSeries, setMakeSeries] = useState('');\n  const [model, setModel] = useState('');\n  const [motorNo, setMotorNo] = useState('');\n  const [crNo, setCrNo] = useState('');\n  const [type, setType] = useState('');\n  const [plateNo, setPlateNo] = useState('');\n  const [chassisNo, setChassisNo] = useState('');\n  const [fileNo, setFileNo] = useState('');\n\n  const [witness1Name, setWitness1Name] = useState('');\n  const [witness2Name, setWitness2Name] = useState('');\n\n  const [buyerEmail] = useState('');\n  const [recipientEmail] = useState('');\n\n  // const [buyerSignature, setBuyerSignature] = useState(null);\n  // const [sellerSignature, setSellerSignature] = useState(null);\n\n  //Google Auth\n  const handleLogin = () => {\n    window.location.href = 'http://localhost:5000/auth/google';\n  };\n\n  //Function to submit (react passes the event object automatically)\n  const handleSubmit = (e) => {\n    // Prevent the default form reload upon submission\n    e.preventDefault();\n    //Object holding all the values from the form\n    const data = {\n      buyerName,\n      buyerAddress,\n      buyerCivilStatus,\n      sellerName,\n      sellerAddress,\n      salePrice,\n      dateOfSale,\n      makeSeries,\n      model,\n      motorNo,\n      crNo,\n      type,\n      plateNo,\n      chassisNo,\n      fileNo,\n      witness1Name,\n      witness2Name,\n      // buyerSignature,\n      // sellerSignature,\n    };\n    //Calls the function to generate the PDF with the data passed\n    generatePDF(data);\n  };\n\n  \n\n  const generatePDF = (data) => {\n    //Importing the jsPDF library so we can create PDFs in JS\n    const { jsPDF } = require('jspdf');\n    //Create a new document\n    const doc = new jsPDF();\n\n    doc.text('Deed of Sale', 10, 10);\n    doc.text(`Buyer Name: ${data.buyerName}`, 10, 20);\n    doc.text(`Buyer Address: ${data.buyerAddress}`, 10, 30);\n    doc.text(`Buyer Civil Status: ${data.buyerCivilStatus}`, 10, 40);\n\n    doc.text(`Seller Name: ${data.sellerName}`, 10, 50);\n    doc.text(`Seller Address: ${data.sellerAddress}`, 10, 60);\n    doc.text(`Sale Price: ${data.salePrice}`, 10, 70);\n    doc.text(`Date of Sale: ${data.dateOfSale}`, 10, 80);\n\n    doc.text('Motor Vehicle Info:', 10, 90);\n    doc.text(`Make/Series: ${data.makeSeries}`, 10, 100);\n    doc.text(`Model: ${data.model}`, 10, 110);\n    doc.text(`Motor No: ${data.motorNo}`, 10, 120);\n    doc.text(`C.R. No: ${data.crNo}`, 10, 130);\n    doc.text(`Type: ${data.type}`, 10, 140);\n    doc.text(`Plate No.: ${data.plateNo}`, 10, 150);\n    doc.text(`Chassis No: ${data.chassisNo}`, 10, 160);\n    doc.text(`File No: ${data.fileNo}`, 10, 170);\n\n    doc.text(`Witness 1: ${data.witness1Name}`, 10, 180);\n    doc.text(`Witness 2: ${data.witness2Name}`, 10, 190);\n\n    // For signatures, we will mention the file names since PDFs can't directly store images in this simple format\n    // doc.text(`Buyer Signature: ${data.buyerSignature ? 'Uploaded' : 'Not Provided'}`, 10, 200);\n    // doc.text(`Seller Signature: ${data.sellerSignature ? 'Uploaded' : 'Not Provided'}`, 10, 210);\n\n    // Save the PDF\n    doc.save('deed_of_sale.pdf');\n  };\n  \n  \n  const sendEmail = (data) => {\n    if (!buyerEmail) {\n        alert('Please provide your email to send the document.');\n        return;\n    }\n\n    // Ask for the recipient email\n    const recipientEmail = prompt(\"Please enter the recipient's email:\");\n\n    if (!recipientEmail) {\n        alert('Recipient email is required.');\n        return;\n    }\n\n    fetch('http://localhost:5000/send-email', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            senderEmail: buyerEmail, // User's email from login\n            recipientEmail: recipientEmail, // Recipient's email entered\n            formData: data,\n        }),\n    })\n    .then((response) => response.json())\n    .then(() => {\n        alert('Email sent successfully!');\n    })\n    .catch((error) => {\n        alert('Error sending email: ' + error.message);\n    });\n};\n\n// In the handleSubmit method, change the action to call the `sendEmail` method\nconst handleActionChange = () => {\n  // Check if the user is logged in (authenticated via Google)\n  const user = sessionStorage.getItem(\"user\"); // Check if user is stored in session (after Google login)\n\n  if (!user) {\n      // If the user isn't logged in, trigger Google login\n      handleLogin();\n  } else {\n      // If the user is logged in, proceed with asking for the recipient email\n      sendEmail({\n          buyerName,\n          buyerAddress,\n          buyerCivilStatus,\n          sellerName,\n          sellerAddress,\n          salePrice,\n          dateOfSale,\n          makeSeries,\n          model,\n          motorNo,\n          crNo,\n          type,\n          plateNo,\n          chassisNo,\n          fileNo,\n          witness1Name,\n          witness2Name,\n          buyerEmail,\n          recipientEmail,\n      });\n  }\n};\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Deed of Sale</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Buyer Details */}\n        <h3>Buyer Details</h3>\n        <label>Buyer Name:\n          <input type=\"text\" value={buyerName} onChange={(e) => setBuyerName(e.target.value)} />\n        </label><br />\n        <label>Buyer Address:\n          <input type=\"text\" value={buyerAddress} onChange={(e) => setBuyerAddress(e.target.value)} />\n        </label><br />\n        <label>Buyer Civil Status:\n          <input type=\"text\" value={buyerCivilStatus} onChange={(e) => setBuyerCivilStatus(e.target.value)} />\n        </label><br />\n\n        {/* Seller Details */}\n        <h3>Seller Details</h3>\n        <label>Seller Name:\n          <input type=\"text\" value={sellerName} onChange={(e) => setSellerName(e.target.value)} />\n        </label><br />\n        <label>Seller Address:\n          <input type=\"text\" value={sellerAddress} onChange={(e) => setSellerAddress(e.target.value)} />\n        </label><br />\n        <label>Sale Price (₱):\n  <input\n    type=\"number\"\n    value={salePrice}\n    onChange={(e) => setSalePrice(e.target.value)}\n    step=\"0.01\"\n    min=\"0\"\n    placeholder=\"Enter amount in ₱\"\n  />\n</label><br />\n\n        <label>Date of Sale:\n          <input type=\"date\" value={dateOfSale} onChange={(e) => setDateOfSale(e.target.value)} />\n        </label><br />\n\n        {/* Vehicle Info */}\n        <h3>Motor Vehicle Info</h3>\n        <label>Make/Series:\n          <input type=\"text\" value={makeSeries} onChange={(e) => setMakeSeries(e.target.value)} />\n        </label><br />\n        <label>Model:\n          <input type=\"text\" value={model} onChange={(e) => setModel(e.target.value)} />\n        </label><br />\n        <label>Motor No:\n          <input type=\"text\" value={motorNo} onChange={(e) => setMotorNo(e.target.value)} />\n        </label><br />\n        <label>C.R. No:\n          <input type=\"text\" value={crNo} onChange={(e) => setCrNo(e.target.value)} />\n        </label><br />\n        <label>Type:\n          <input type=\"text\" value={type} onChange={(e) => setType(e.target.value)} />\n        </label><br />\n        <label>Plate No.:\n          <input type=\"text\" value={plateNo} onChange={(e) => setPlateNo(e.target.value)} />\n        </label><br />\n        <label>Chassis No:\n          <input type=\"text\" value={chassisNo} onChange={(e) => setChassisNo(e.target.value)} />\n        </label><br />\n        <label>File No:\n          <input type=\"text\" value={fileNo} onChange={(e) => setFileNo(e.target.value)} />\n        </label><br />\n\n        {/* Witnesses */}\n        <h3>Witnesses</h3>\n        <label>Witness Name:\n          <input type=\"text\" value={witness1Name} onChange={(e) => setWitness1Name(e.target.value)} />\n        </label><br />\n        <label>Witness Name:\n          <input type=\"text\" value={witness2Name} onChange={(e) => setWitness2Name(e.target.value)} />\n        </label><br />\n\n        {/* Signatures\n        <h3>Signatures</h3>\n        <label>Upload Buyer Signature:\n          <input type=\"file\" onChange={(e) => setBuyerSignature(e.target.files[0])} />\n        </label><br />\n        <label>Upload Seller Signature:\n          <input type=\"file\" onChange={(e) => setSellerSignature(e.target.files[0])} />\n        </label><br /> */}\n\n<br/>\n        \n        <div>\n        <button type=\"submit\">Generate Deed of Sale PDF</button>\n        <br/>\n        <button type=\"button\" onClick={() => handleActionChange('send')}>Send via Email</button>\n        </div>\n        \n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}